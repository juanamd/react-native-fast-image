{"version":3,"file":"react-native-fast-image.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react'\r\nimport {\r\n    View,\r\n    Image,\r\n    NativeModules,\r\n    requireNativeComponent,\r\n    StyleSheet,\r\n    FlexStyle,\r\n    LayoutChangeEvent,\r\n    ShadowStyleIOS,\r\n    StyleProp,\r\n    TransformsStyle,\r\n} from 'react-native'\r\n\r\nconst FastImageViewNativeModule = NativeModules.FastImageView\r\n\r\ntype ResizeMode = 'contain' | 'cover' | 'stretch' | 'center'\r\n\r\nconst resizeMode = {\r\n    contain: 'contain',\r\n    cover: 'cover',\r\n    stretch: 'stretch',\r\n    center: 'center',\r\n} as const\r\n\r\ntype Priority = 'low' | 'normal' | 'high'\r\n\r\nconst priority = {\r\n    low: 'low',\r\n    normal: 'normal',\r\n    high: 'high',\r\n} as const\r\n\r\ntype Cache = 'low' | 'normal' | 'high'\r\n\r\nconst cacheControl = {\r\n    // Ignore headers, use uri as cache key, fetch only if not in cache.\r\n    immutable: 'immutable',\r\n    // Respect http headers, no aggressive caching.\r\n    web: 'web',\r\n    // Only load from cache.\r\n    cacheOnly: 'cacheOnly',\r\n} as const\r\n\r\nexport type Source = {\r\n    uri?: string\r\n    headers?: { [key: string]: string }\r\n    priority?: Priority\r\n    cache?: Cache\r\n}\r\n\r\nexport interface OnLoadEvent {\r\n    nativeEvent: {\r\n        width: number\r\n        height: number\r\n    }\r\n}\r\n\r\nexport interface OnProgressEvent {\r\n    nativeEvent: {\r\n        loaded: number\r\n        total: number\r\n    }\r\n}\r\n\r\nexport interface ImageStyle extends FlexStyle, TransformsStyle, ShadowStyleIOS {\r\n    backfaceVisibility?: 'visible' | 'hidden'\r\n    borderBottomLeftRadius?: number\r\n    borderBottomRightRadius?: number\r\n    backgroundColor?: string\r\n    borderColor?: string\r\n    borderWidth?: number\r\n    borderRadius?: number\r\n    borderTopLeftRadius?: number\r\n    borderTopRightRadius?: number\r\n    overlayColor?: string\r\n    tintColor?: string\r\n    opacity?: number\r\n}\r\n\r\nexport interface FastImageProps {\r\n    source: Source | number\r\n    resizeMode?: ResizeMode\r\n    fallback?: boolean\r\n\r\n    onLoadStart?(): void\r\n\r\n    onProgress?(event: OnProgressEvent): void\r\n\r\n    onLoad?(event: OnLoadEvent): void\r\n\r\n    onError?(): void\r\n\r\n    onLoadEnd?(): void\r\n\r\n    /**\r\n     * onLayout function\r\n     *\r\n     * Invoked on mount and layout changes with\r\n     *\r\n     * {nativeEvent: { layout: {x, y, width, height}}}.\r\n     */\r\n    onLayout?: (event: LayoutChangeEvent) => void\r\n\r\n    /**\r\n     *\r\n     * Style\r\n     */\r\n    style?: StyleProp<ImageStyle>\r\n\r\n    /**\r\n     * TintColor\r\n     *\r\n     * If supplied, changes the color of all the non-transparent pixels to the given color.\r\n     */\r\n\r\n    tintColor?: number | string\r\n\r\n    /**\r\n     * A unique identifier for this element to be used in UI Automation testing scripts.\r\n     */\r\n    testID?: string\r\n\r\n    /**\r\n     * Render children within the image.\r\n     */\r\n    children?: React.ReactNode\r\n}\r\n\r\nfunction FastImageBase({\r\n    source,\r\n    tintColor,\r\n    onLoadStart,\r\n    onProgress,\r\n    onLoad,\r\n    onError,\r\n    onLoadEnd,\r\n    style,\r\n    fallback,\r\n    children,\r\n    resizeMode = 'cover',\r\n    forwardedRef,\r\n    ...props\r\n}: FastImageProps & { forwardedRef: React.Ref<any> }) {\r\n    const resolvedSource = Image.resolveAssetSource(source as any)\r\n\r\n    if (fallback) {\r\n        return (\r\n            <View style={[styles.imageContainer, style]} ref={forwardedRef}>\r\n                <Image\r\n                    {...props}\r\n                    style={StyleSheet.absoluteFill}\r\n                    source={resolvedSource}\r\n                    onLoadStart={onLoadStart}\r\n                    onProgress={onProgress}\r\n                    onLoad={onLoad as any}\r\n                    onError={onError}\r\n                    onLoadEnd={onLoadEnd}\r\n                    resizeMode={resizeMode}\r\n                />\r\n                {children}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={[styles.imageContainer, style]} ref={forwardedRef}>\r\n            <FastImageView\r\n                {...props}\r\n                tintColor={tintColor}\r\n                style={StyleSheet.absoluteFill}\r\n                source={resolvedSource}\r\n                onFastImageLoadStart={onLoadStart}\r\n                onFastImageProgress={onProgress}\r\n                onFastImageLoad={onLoad}\r\n                onFastImageError={onError}\r\n                onFastImageLoadEnd={onLoadEnd}\r\n                resizeMode={resizeMode}\r\n            />\r\n            {children}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FastImageMemo = memo(FastImageBase)\r\n\r\nconst FastImageComponent: React.ComponentType<FastImageProps> = forwardRef(\r\n    (props: FastImageProps, ref: React.Ref<any>) => (\r\n        <FastImageMemo forwardedRef={ref} {...props} />\r\n    ),\r\n)\r\n\r\nFastImageComponent.displayName = 'FastImage'\r\n\r\ninterface FastImageStaticProperties {\r\n    resizeMode: typeof resizeMode\r\n    priority: typeof priority\r\n    cacheControl: typeof cacheControl\r\n    preload: (sources: Source[]) => void\r\n}\r\n\r\nconst FastImage: React.ComponentType<FastImageProps> &\r\n    FastImageStaticProperties = FastImageComponent as any\r\n\r\nFastImage.resizeMode = resizeMode\r\n\r\nFastImage.cacheControl = cacheControl\r\n\r\nFastImage.priority = priority\r\n\r\nFastImage.preload = (sources: Source[]) =>\r\n    FastImageViewNativeModule.preload(sources)\r\n\r\nconst styles = StyleSheet.create({\r\n    imageContainer: {\r\n        overflow: 'hidden',\r\n    },\r\n})\r\n\r\n// Types of requireNativeComponent are not correct.\r\nconst FastImageView = (requireNativeComponent as any)(\r\n    'FastImageView',\r\n    FastImage,\r\n    {\r\n        nativeOnly: {\r\n            onFastImageLoadStart: true,\r\n            onFastImageProgress: true,\r\n            onFastImageLoad: true,\r\n            onFastImageError: true,\r\n            onFastImageLoadEnd: true,\r\n        },\r\n    },\r\n)\r\n\r\nexport default FastImage\r\n"],"names":["FastImageViewNativeModule","NativeModules","FastImageView","resizeMode","contain","cover","stretch","center","priority","low","normal","high","cacheControl","immutable","web","cacheOnly","FastImageBase","source","tintColor","onLoadStart","onProgress","onLoad","onError","onLoadEnd","style","fallback","children","forwardedRef","props","resolvedSource","Image","resolveAssetSource","React","View","styles","imageContainer","ref","StyleSheet","absoluteFill","onFastImageLoadStart","onFastImageProgress","onFastImageLoad","onFastImageError","onFastImageLoadEnd","FastImageMemo","memo","FastImageComponent","forwardRef","displayName","FastImage","preload","sources","create","overflow","requireNativeComponent","nativeOnly"],"mappings":";;;;;;;;;;;;;;;;;;AAcA,IAAMA,yBAAyB,GAAGC,aAAa,CAACC,aAAhD;AAIA,IAAMC,UAAU,GAAG;AACfC,EAAAA,OAAO,EAAE,SADM;AAEfC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,OAAO,EAAE,SAHM;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;AASA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,GAAG,EAAE,KADQ;AAEbC,EAAAA,MAAM,EAAE,QAFK;AAGbC,EAAAA,IAAI,EAAE;AAHO,CAAjB;AAQA,IAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,SAAS,EAAE,WAFM;AAGjB;AACAC,EAAAA,GAAG,EAAE,KAJY;AAKjB;AACAC,EAAAA,SAAS,EAAE;AANM,CAArB;;AA8FA,SAASC,aAAT;MACIC,cAAAA;MACAC,iBAAAA;MACAC,mBAAAA;MACAC,kBAAAA;MACAC,cAAAA;MACAC,eAAAA;MACAC,iBAAAA;MACAC,aAAAA;MACAC,gBAAAA;MACAC,gBAAAA;6BACAvB;MAAAA,0CAAa;MACbwB,oBAAAA;MACGC;;AAEH,MAAMC,cAAc,GAAGC,KAAK,CAACC,kBAAN,CAAyBd,MAAzB,CAAvB;;AAEA,MAAIQ,QAAJ,EAAc;AACV,WACIO,mBAAA,CAACC,IAAD;AAAMT,MAAAA,KAAK,EAAE,CAACU,MAAM,CAACC,cAAR,EAAwBX,KAAxB;AAAgCY,MAAAA,GAAG,EAAET;KAAlD,EACIK,mBAAA,CAACF,KAAD,oBACQF;AACJJ,MAAAA,KAAK,EAAEa,UAAU,CAACC;AAClBrB,MAAAA,MAAM,EAAEY;AACRV,MAAAA,WAAW,EAAEA;AACbC,MAAAA,UAAU,EAAEA;AACZC,MAAAA,MAAM,EAAEA;AACRC,MAAAA,OAAO,EAAEA;AACTC,MAAAA,SAAS,EAAEA;AACXpB,MAAAA,UAAU,EAAEA;MAThB,CADJ,EAYKuB,QAZL,CADJ;AAgBH;;AAED,SACIM,mBAAA,CAACC,IAAD;AAAMT,IAAAA,KAAK,EAAE,CAACU,MAAM,CAACC,cAAR,EAAwBX,KAAxB;AAAgCY,IAAAA,GAAG,EAAET;GAAlD,EACIK,mBAAA,CAAC9B,aAAD,oBACQ0B;AACJV,IAAAA,SAAS,EAAEA;AACXM,IAAAA,KAAK,EAAEa,UAAU,CAACC;AAClBrB,IAAAA,MAAM,EAAEY;AACRU,IAAAA,oBAAoB,EAAEpB;AACtBqB,IAAAA,mBAAmB,EAAEpB;AACrBqB,IAAAA,eAAe,EAAEpB;AACjBqB,IAAAA,gBAAgB,EAAEpB;AAClBqB,IAAAA,kBAAkB,EAAEpB;AACpBpB,IAAAA,UAAU,EAAEA;IAVhB,CADJ,EAaKuB,QAbL,CADJ;AAiBH;;AAED,IAAMkB,aAAa,gBAAGC,IAAI,CAAC7B,aAAD,CAA1B;AAEA,IAAM8B,kBAAkB,gBAAwCC,UAAU,CACtE,UAACnB,KAAD,EAAwBQ,GAAxB;AAAA,SACIJ,mBAAA,CAACY,aAAD;AAAejB,IAAAA,YAAY,EAAES;KAASR,MAAtC,CADJ;AAAA,CADsE,CAA1E;AAMAkB,kBAAkB,CAACE,WAAnB,GAAiC,WAAjC;AASA,IAAMC,SAAS,GACiBH,kBADhC;AAGAG,SAAS,CAAC9C,UAAV,GAAuBA,UAAvB;AAEA8C,SAAS,CAACrC,YAAV,GAAyBA,YAAzB;AAEAqC,SAAS,CAACzC,QAAV,GAAqBA,QAArB;;AAEAyC,SAAS,CAACC,OAAV,GAAoB,UAACC,OAAD;AAAA,SAChBnD,yBAAyB,CAACkD,OAA1B,CAAkCC,OAAlC,CADgB;AAAA,CAApB;;AAGA,IAAMjB,MAAM,gBAAGG,UAAU,CAACe,MAAX,CAAkB;AAC7BjB,EAAAA,cAAc,EAAE;AACZkB,IAAAA,QAAQ,EAAE;AADE;AADa,CAAlB,CAAf;;AAOA,IAAMnD,aAAa,gBAAIoD,sBAA8B,CACjD,eADiD,EAEjDL,SAFiD,EAGjD;AACIM,EAAAA,UAAU,EAAE;AACRhB,IAAAA,oBAAoB,EAAE,IADd;AAERC,IAAAA,mBAAmB,EAAE,IAFb;AAGRC,IAAAA,eAAe,EAAE,IAHT;AAIRC,IAAAA,gBAAgB,EAAE,IAJV;AAKRC,IAAAA,kBAAkB,EAAE;AALZ;AADhB,CAHiD,CAArD;;;;"}